{
  "name": "test_listaddcontact",
  "status": "broken",
  "statusDetails": {
    "message": "selenium.common.exceptions.TimeoutException: Message:",
    "trace": "self = <test_contact.TestContact object at 0x00000238617FC8D0>\n\n    def test_listaddcontact(self):\n        name = \"麦苗\"\n>       result = self.main.goto_contactlist().add_contact().add_list().weworkadd(name)\n\ntest_contact.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page\\add_contact\\add_contact_list\\contactlistaddpage.py:21: in weworkadd\n    self.webdriver_wait(member_ele)\n..\\page\\basepage.py:42: in webdriver_wait\n    WebDriverWait(self.driver, timeout).until(lambda x:x.find_element(*locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7f257bac-0c0a-4544-b699-142309f653b2\")>\nmethod = <function BasePage.webdriver_wait.<locals>.<lambda> at 0x0000023861D02048>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"
  },
  "attachments": [
    {
      "name": "log",
      "source": "cc38f183-8968-4f19-a97c-f6ff2f0ca65d-attachment.txt",
      "type": "text/plain"
    },
    {
      "name": "stderr",
      "source": "3dbaf2c9-29ed-457a-957c-12c180acae59-attachment.txt",
      "type": "text/plain"
    }
  ],
  "start": 1596020468219,
  "stop": 1596020524745,
  "uuid": "cd7ad8fc-7fc4-470c-9dde-977e2e282605",
  "historyId": "900e515a9ba68e243a572b819a1f6be0",
  "testCaseId": "db6341bf06211cba6e0e8b090307eb4d",
  "fullName": "test_contact.TestContact#test_listaddcontact",
  "labels": [
    {
      "name": "suite",
      "value": "test_contact"
    },
    {
      "name": "subSuite",
      "value": "TestContact"
    },
    {
      "name": "host",
      "value": "X8O0ILYDG7L3A0P"
    },
    {
      "name": "thread",
      "value": "60652-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "test_contact"
    }
  ]
}