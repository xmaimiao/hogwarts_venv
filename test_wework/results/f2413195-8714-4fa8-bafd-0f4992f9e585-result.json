{
  "name": "test_addmember1[data1]",
  "status": "broken",
  "statusDetails": {
    "message": "selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.",
    "trace": "self = <test_wework_member.TestWeWork object at 0x0000023B0EE9F9E8>, setting = None, name = '忧郁的猫'\n\n    @pytest.mark.parametrize(\"name\",adddata1,ids = addids1)\n    def test_addmember1(self,setting,name):\n    \n        \"\"\"\n        1.打開企業微信首頁\n        2.點擊 通訊錄\n        3.滾動查找並點擊 添加成功\n        4.點擊 從微信通訊錄中添加\n        5.滾動查找xxx，點擊  添加\n        6.验证已加入該人員\n        :return:\n        \"\"\"\n        # 点击通讯录\n        index_ele = (MobileBy.XPATH,'//*[@text=\"通讯录\"]')\n        WebDriverWait(self.driver,20).until(expected_conditions.element_to_be_clickable(index_ele))\n        self.driver.find_element(*index_ele).click()\n    \n    \n        # 滚动查找\"添加成功\"元素\n        button_ele = self.driver.find_element(MobileBy.ANDROID_UIAUTOMATOR, 'new UiScrollable(new UiSelector()'\n                                                               '.scrollable(true).instance(0))'\n                                                               '.scrollIntoView(new UiSelector()'\n                                                               '.text(\"添加成员\").instance(0));')\n        # 获取通讯录人数\n        if \"人未加入\" in self.driver.page_source:\n            member_text_before = self.driver.find_element(MobileBy.XPATH, '//*[contains(@text,\"人未加入\")]').text\n            member_before = int(re.search(\"\\w(\\d{1,3})\", member_text_before).group(1))\n        else:\n            print(self.driver.page_source)\n            member_before = 0\n    \n        # 点击“添加人员”按钮\n        button_ele.click()\n    \n        # 点击从微信添加人员\n        self.driver.find_element(MobileBy.XPATH,'//*[@text=\"从微信/手机通讯录中添加\"]').click()\n        # 滾動查找人员，點擊  添加\n        self.driver.find_element(MobileBy.ANDROID_UIAUTOMATOR, 'new UiScrollable(new UiSelector().'\n                                                                     'scrollable(true).instance(0)).'\n                                                                     'scrollIntoView(new UiSelector().'\n                                                                     f'text(\"{name}\").instance(0));')\n        member_ele = (MobileBy.XPATH, f\"//*[@text='{name}']/../../../..//*[@text='添加']\")\n        WebDriverWait(self.driver, 30).until(expected_conditions.element_to_be_clickable(member_ele))\n        self.driver.find_element(*member_ele).click()\n        sleep(3)\n        self.driver.find_element(MobileBy.XPATH, f\"//*[@text='{name}']/../../../*[@text='加入企业通讯录']\").click()\n        self.driver.back()\n        self.driver.back()\n    \n        # 验证添加人员成功\n        text = member_before\n        ele = self.driver.find_element(MobileBy.ANDROID_UIAUTOMATOR, 'new UiScrollable(new UiSelector().'\n                                                               'scrollable(true).instance(0)).'\n                                                               'scrollIntoView(new UiSelector().'\n                                                               f'text(\"添加成员\").instance(0));')\n        sleep(2)\n>       member_text_after = self.driver.find_element(MobileBy.XPATH, '//*[contains(@text,\"人未加入\")]').text\n\ntest_wework_member.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nc:\\python37\\lib\\site-packages\\appium\\webdriver\\webdriver.py:281: in find_element\n    'value': value})['value']\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\nc:\\python37\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:31: in check_response\n    raise wde\nc:\\python37\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x0000023B0EEC7518>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ces\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-android-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\n\nc:\\python37\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException"
  },
  "description": "\n        1.打開企業微信首頁\n        2.點擊 通訊錄\n        3.滾動查找並點擊 添加成功\n        4.點擊 從微信通訊錄中添加\n        5.滾動查找xxx，點擊  添加\n        6.验证已加入該人員\n        :return:\n        ",
  "attachments": [
    {
      "name": "stdout",
      "source": "863190dc-909c-4c30-929d-3fbefc82e84d-attachment.txt",
      "type": "text/plain"
    }
  ],
  "parameters": [
    {
      "name": "name",
      "value": "'忧郁的猫'"
    }
  ],
  "start": 1595768117326,
  "stop": 1595768193637,
  "uuid": "3079b1c3-13e8-4761-b4da-ed5316cc09a7",
  "historyId": "b54899e2b80e516873ca808d10f62ad2",
  "testCaseId": "9af8223428a32aac443cab1a6ec504a2",
  "fullName": "test_wework.test_wework_member.TestWeWork#test_addmember1",
  "labels": [
    {
      "name": "parentSuite",
      "value": "test_wework"
    },
    {
      "name": "suite",
      "value": "test_wework_member"
    },
    {
      "name": "subSuite",
      "value": "TestWeWork"
    },
    {
      "name": "host",
      "value": "X8O0ILYDG7L3A0P"
    },
    {
      "name": "thread",
      "value": "39356-MainThread"
    },
    {
      "name": "framework",
      "value": "pytest"
    },
    {
      "name": "language",
      "value": "cpython3"
    },
    {
      "name": "package",
      "value": "test_wework.test_wework_member"
    }
  ]
}